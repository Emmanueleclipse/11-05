{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rob\\\\keto-dev\\\\yonia\\\\application\\\\components\\\\RecipeFav.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport * as firebase from 'firebase';\nimport { NavigationActions, StackNavigator, withNavigation } from 'react-navigation';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Icon from \"@expo/vector-icons/SimpleLineIcons\";\nimport { Container, Body, Thumbnail, Text, List, Right, ListItem } from 'native-base';\nimport ConfigApp from \"../utils/ConfigApp\";\nimport ListEmpty from \"./ListEmpty\";\nimport Strings from \"../utils/Strings\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar RecipeFav = function (_React$Component) {\n  _inherits(RecipeFav, _React$Component);\n\n  var _super = _createSuper(RecipeFav);\n\n  function RecipeFav(props) {\n    var _this;\n\n    _classCallCheck(this, RecipeFav);\n\n    _this = _super.call(this, props);\n\n    _this.ListEmptyView = function () {\n      return React.createElement(ListEmpty, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.removeRecipe = function _callee(recipe_id) {\n      var user, recipes, recipesFav;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              user = firebase.auth().currentUser;\n              uid = user.uid;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('recipes'));\n\n            case 5:\n              recipes = _context.sent;\n              recipesFav = JSON.parse(recipes);\n              recipesItems = recipesFav.filter(function (e) {\n                return e.recipe_id !== recipe_id && e.userId == uid;\n              });\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('recipes', JSON.stringify(recipesItems)));\n\n            case 10:\n              _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                recipes: recipesItems || []\n              }));\n\n              _context.next = 15;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 13]], Promise);\n    };\n\n    _this.state = {\n      recipes: []\n    };\n    return _this;\n  }\n\n  _createClass(RecipeFav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchRecipes();\n    }\n  }, {\n    key: \"RecipeDetails\",\n    value: function RecipeDetails(item) {\n      var navigateAction = NavigationActions.navigate({\n        routeName: 'RecipeDetailsScreen',\n        params: {\n          item: item\n        }\n      });\n      this.props.navigation.dispatch(navigateAction);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 1\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.recipes,\n        refreshing: \"false\",\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(ListItem, {\n            style: {\n              paddingLeft: 0,\n              marginLeft: 0,\n              backgroundColor: '#FFF',\n              opacity: 1,\n              borderColor: 'rgba(0,0,0,0.05)',\n              borderBottomWidth: 1\n            },\n            onPress: function onPress() {\n              return _this2.RecipeDetails(item);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }\n          }, React.createElement(Thumbnail, {\n            size: 80,\n            source: {\n              uri: ConfigApp.URL + 'images/' + item.recipe_image\n            },\n            style: {\n              paddingLeft: 10,\n              marginLeft: 10,\n              borderRadius: 10\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }\n          }), React.createElement(Body, {\n            style: {\n              paddingLeft: 0,\n              marginLeft: 0\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            numberOfLines: 1,\n            style: {\n              fontSize: 14,\n              fontWeight: 'bold',\n              marginBottom: 5\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }\n          }, item.recipe_title), React.createElement(View, {\n            style: {\n              flexDirection: 'row',\n              marginBottom: 5\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }\n          }, React.createElement(Image, {\n            source: require(\"../../assets/images/cooktime.png\"),\n            style: {\n              width: 15,\n              height: 15,\n              marginLeft: 12,\n              marginRight: -8\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }\n          }), React.createElement(Text, {\n            style: {\n              fontSize: 12,\n              color: '#9e9e9e'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }\n          }, item.recipe_time), React.createElement(Image, {\n            source: require(\"../../assets/images/calories.png\"),\n            style: {\n              width: 15,\n              height: 15,\n              marginRight: -8\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }\n          }), React.createElement(Text, {\n            style: {\n              fontSize: 12,\n              color: '#9e9e9e'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }\n          }, item.recipe_cals))), React.createElement(Right, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }\n          }, React.createElement(TouchableOpacity, {\n            onPress: _this2.removeRecipe.bind(_this2, item.recipe_id),\n            activeOpacity: 1,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }\n          }, React.createElement(Text, {\n            note: true,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }\n          }, React.createElement(Icon, {\n            name: \"trash\",\n            style: {\n              fontSize: 18\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }\n          })))));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        ListEmptyComponent: this.ListEmptyView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 1\n        }\n      }));\n    }\n  }, {\n    key: \"fetchRecipes\",\n    value: function fetchRecipes() {\n      var user, recipesJSON, recipesFav, recipesArray;\n      return _regeneratorRuntime.async(function fetchRecipes$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              user = firebase.auth().currentUser;\n              uid = user.uid;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('recipes'));\n\n            case 4:\n              recipesJSON = _context2.sent;\n              recipesFav = JSON.parse(recipesJSON);\n              recipesItems = recipesFav.filter(function (e) {\n                return e.userId == uid;\n              });\n              recipesArray = recipesItems || [];\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                recipes: recipesArray\n              }));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return RecipeFav;\n}(React.Component);\n\nexport default withNavigation(RecipeFav);","map":{"version":3,"sources":["C:/Users/Rob/keto-dev/yonia/application/components/RecipeFav.js"],"names":["React","Component","firebase","NavigationActions","StackNavigator","withNavigation","AsyncStorage","Icon","Container","Body","Thumbnail","Text","List","Right","ListItem","ConfigApp","ListEmpty","Strings","styles","require","Dimensions","get","height","width","RecipeFav","props","ListEmptyView","removeRecipe","recipe_id","user","auth","currentUser","uid","getItem","recipes","recipesFav","JSON","parse","recipesItems","filter","e","userId","setItem","stringify","setState","state","fetchRecipes","item","navigateAction","navigate","routeName","params","navigation","dispatch","paddingLeft","marginLeft","backgroundColor","opacity","borderColor","borderBottomWidth","RecipeDetails","uri","URL","recipe_image","borderRadius","fontSize","fontWeight","marginBottom","recipe_title","flexDirection","marginRight","color","recipe_time","recipe_cals","bind","index","toString","recipesJSON","recipesArray"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as firebase from 'firebase';\nimport { NavigationActions, StackNavigator, withNavigation} from 'react-navigation';\nimport{AsyncStorage, TouchableOpacity, Dimensions, View, Image, ScrollView, FlatList} from 'react-native';\nimport Icon from 'react-native-vector-icons/SimpleLineIcons';\nimport { Container, Body, Thumbnail, Text, List, Right, ListItem} from 'native-base';\nimport ConfigApp from '../utils/ConfigApp';\nimport ListEmpty from './ListEmpty';\nimport Strings from '../utils/Strings';\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nclass RecipeFav extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n      recipes: []\n    }\n\n  }\n\n  componentDidMount () {\n    this.fetchRecipes();\n  }\n\n  RecipeDetails (item) {\n    const navigateAction = NavigationActions.navigate({\n      routeName: 'RecipeDetailsScreen',\n      params: {item}\n    });\n    this.props.navigation.dispatch(navigateAction);\n  }\n\nListEmptyView = () => {\n    return (\n      <ListEmpty/>\n    );\n  }\n\nremoveRecipe = async (recipe_id) => {\ntry {\n\nvar user = firebase.auth().currentUser;\nuid = user.uid;\n\nconst recipes = await AsyncStorage.getItem('recipes');\nlet recipesFav = JSON.parse(recipes);\nrecipesItems = recipesFav.filter(function(e){ return e.recipe_id !== recipe_id && e.userId == uid })\n\nawait AsyncStorage.setItem('recipes', JSON.stringify(recipesItems));\n\nthis.setState({ \n...this.state, \nrecipes: recipesItems || [] \n}); \n\n} catch(error) {\n\n}}; \n\n  render () {\n\n    return (\n\n<List>\n\n<FlatList\n          data={ this.state.recipes }\n          refreshing=\"false\"\n          renderItem={({item}) =>\n                \n            <ListItem style={{paddingLeft: 0, marginLeft: 0, backgroundColor:'#FFF', opacity: 1, borderColor: 'rgba(0,0,0,0.05)', borderBottomWidth: 1}}  onPress={() => this.RecipeDetails(item)} >\n              <Thumbnail size={80} source={{ uri: ConfigApp.URL+'images/'+item.recipe_image }} style={{paddingLeft: 10, marginLeft: 10, borderRadius: 10}} />\n              <Body style={{paddingLeft: 0, marginLeft: 0}}>\n                <Text numberOfLines={1} style={{fontSize: 14, fontWeight: 'bold', marginBottom: 5}}>\n                {item.recipe_title}\n                </Text>\n                <View style={{flexDirection: 'row', marginBottom: 5}}>\n                <Image source={require('../../assets/images/cooktime.png')} style={{width: 15, height: 15, marginLeft: 12, marginRight: -8}} />\n                <Text style={{ fontSize: 12, color: '#9e9e9e'}}>{item.recipe_time}</Text>\n                <Image source={require('../../assets/images/calories.png')} style={{width: 15, height: 15, marginRight: -8}} />\n                <Text style={{ fontSize: 12, color: '#9e9e9e'}}>{item.recipe_cals}</Text>\n                </View>\n              </Body>\n              <Right>\n                <TouchableOpacity onPress={this.removeRecipe.bind(this, item.recipe_id)} activeOpacity={1}>\n                <Text note>\n                <Icon name=\"trash\" style={{fontSize: 18}}/>\n                </Text>\n                </TouchableOpacity>\n              </Right>\n            </ListItem>\n          \n}\n        keyExtractor={(item, index) => index.toString()}\n        ListEmptyComponent={this.ListEmptyView}\n\n\n        /> \n\n</List>\n\n    )\n  }\n\n    async fetchRecipes () {\n      var user = firebase.auth().currentUser;\n      uid = user.uid;\n\n      let recipesJSON= await AsyncStorage.getItem('recipes');\n      let recipesFav = JSON.parse(recipesJSON);\n      recipesItems = recipesFav.filter(function(e){\n            return e.userId == uid\n        })\n      const recipesArray = recipesItems || [];\n      this.setState({\n        ...this.state,\n        recipes: recipesArray\n      });\n  }\n\n}\n\nexport default withNavigation(RecipeFav);\n"]},"metadata":{},"sourceType":"module"}