{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rob\\\\keto-dev\\\\yonia\\\\application\\\\components\\\\ListEmpty.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationActions, withNavigation } from 'react-navigation';\nimport Strings from \"../utils/Strings\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ListEmpty = function (_React$Component) {\n  _inherits(ListEmpty, _React$Component);\n\n  var _super = _createSuper(ListEmpty);\n\n  function ListEmpty() {\n    _classCallCheck(this, ListEmpty);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ListEmpty, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          height: height * 0.6,\n          width: width,\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: '#FFF'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 5\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/images/chef.png\"),\n        style: {\n          width: 70,\n          height: 70,\n          marginBottom: 15\n        },\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          fontWeight: 'bold',\n          marginBottom: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, Strings.ST66.toUpperCase()), React.createElement(Text, {\n        style: {\n          fontSize: 13,\n          marginBottom: 15,\n          color: '#a4a4a4'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, Strings.ST67.toUpperCase()));\n    }\n  }]);\n\n  return ListEmpty;\n}(React.Component);\n\nexport default withNavigation(ListEmpty);","map":{"version":3,"sources":["C:/Users/Rob/keto-dev/yonia/application/components/ListEmpty.js"],"names":["React","Component","NavigationActions","withNavigation","Strings","Dimensions","get","width","height","ListEmpty","alignItems","justifyContent","backgroundColor","require","marginBottom","fontSize","fontWeight","ST66","toUpperCase","color","ST67"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;AAEA,SAASC,iBAAT,EAA4BC,cAA5B,QAAiD,kBAAjD;AACA,OAAOC,OAAP;;AAGA,sBAA0BC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;AAAA,IAAQC,KAAR,mBAAQA,KAAR;AAAA,IAAeC,MAAf,mBAAeA,MAAf;;IAEMC,S;;;;;;;;;;;;;WAEJ,kBAAU;AAER,aAEA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACD,UAAAA,MAAM,EAAEA,MAAM,GAAG,GAAlB;AAAuBD,UAAAA,KAAK,EAAEA,KAA9B;AAAqCG,UAAAA,UAAU,EAAE,QAAjD;AAA2DC,UAAAA,cAAc,EAAE,QAA3E;AAAqFC,UAAAA,eAAe,EAAE;AAAtG,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,gCAAtB;AAAwD,QAAA,KAAK,EAAE;AAACN,UAAAA,KAAK,EAAE,EAAR;AAAYC,UAAAA,MAAM,EAAE,EAApB;AAAwBM,UAAAA,YAAY,EAAE;AAAtC,SAA/D;AAA0G,QAAA,UAAU,EAAC,SAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE,EAAX;AAAeC,UAAAA,UAAU,EAAE,MAA3B;AAAoCF,UAAAA,YAAY,EAAE;AAAlD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoEV,OAAO,CAACa,IAAR,CAAaC,WAAb,EAApE,CAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACH,UAAAA,QAAQ,EAAE,EAAX;AAAeD,UAAAA,YAAY,EAAE,EAA7B;AAAiCK,UAAAA,KAAK,EAAE;AAAxC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkEf,OAAO,CAACgB,IAAR,CAAaF,WAAb,EAAlE,CAHF,CAFA;AASD;;;;EAbqBlB,KAAK,CAACC,S;;AAiB9B,eAAeE,cAAc,CAACM,SAAD,CAA7B","sourcesContent":["import React, {Component} from 'react';\nimport{ Image, View, Dimensions, Text} from 'react-native';\nimport { NavigationActions, withNavigation} from 'react-navigation';\nimport Strings from '../utils/Strings';\n\n\nconst { width, height } = Dimensions.get('window'); \n\nclass ListEmpty extends React.Component {\n\n  render () {\n\n    return (\n\n    <View style={{height: height * 0.6, width: width, alignItems: 'center', justifyContent: 'center', backgroundColor: '#FFF' }}>\n      <Image source={require('../../assets/images/chef.png')} style={{width: 70, height: 70, marginBottom: 15}} resizeMode=\"contain\" />\n      <Text style={{fontSize: 16, fontWeight: 'bold',  marginBottom: 8}}>{Strings.ST66.toUpperCase()}</Text>\n      <Text style={{fontSize: 13, marginBottom: 15, color: '#a4a4a4'}}>{Strings.ST67.toUpperCase()}</Text>\n    </View>\n\n    )\n  }\n\n}\n\nexport default withNavigation(ListEmpty);\n"]},"metadata":{},"sourceType":"module"}