{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rob\\\\keto-dev\\\\yonia\\\\application\\\\screens\\\\VideoPlayer.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AppPreLoader from \"../components/AppPreLoader\";\nimport { NavigationActions, StackNavigator } from 'react-navigation';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ConfigApp from \"../utils/ConfigApp\";\nimport { WebView } from 'react-native-webview';\nimport { Container, Text, Button } from 'native-base';\nimport Icon from \"@expo/vector-icons/SimpleLineIcons\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar VideoP = function (_Component) {\n  _inherits(VideoP, _Component);\n\n  var _super = _createSuper(VideoP);\n\n  function VideoP() {\n    _classCallCheck(this, VideoP);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(VideoP, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var UrlVideo = this.props.navigation.state.params.VideoLINK;\n      return React.createElement(Container, {\n        style: {\n          backgroundColor: '#000000'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 1\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.props.navigation.goBack();\n        },\n        style: {\n          position: 'absolute',\n          right: 15,\n          top: 40,\n          zIndex: 9999\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 1\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 30,\n          height: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, React.createElement(Icon, {\n        name: \"close\",\n        style: {\n          color: '#fff',\n          fontSize: 24\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }))), React.createElement(WebView, {\n        source: {\n          uri: 'https://www.youtube.com/embed/' + UrlVideo + '?rel=0&autoplay=0&showinfo=0&controls=0&playsinline=1&modestbranding=1'\n        },\n        style: {\n          width: width,\n          height: height * 0.30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 1\n        }\n      }));\n    }\n  }]);\n\n  return VideoP;\n}(Component);\n\nVideoP.navigationOptions = {\n  headerShown: false\n};\nexport { VideoP as default };","map":{"version":3,"sources":["C:/Users/Rob/keto-dev/yonia/application/screens/VideoPlayer.js"],"names":["React","Component","AppPreLoader","NavigationActions","StackNavigator","ConfigApp","WebView","Container","Text","Button","Icon","styles","require","Dimensions","get","height","width","VideoP","UrlVideo","props","navigation","state","params","VideoLINK","backgroundColor","goBack","position","right","top","zIndex","color","fontSize","uri","navigationOptions","headerShown"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,kBAAlD;;;;;;AAEA,OAAOC,SAAP;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,QAAuC,aAAvC;AACA,OAAOC,IAAP;;AAEA,IAAIC,MAAM,GAAGC,OAAO,6BAApB;;AACA,sBAAsBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAtB;AAAA,IAAKC,MAAL,mBAAKA,MAAL;AAAA,IAAaC,KAAb,mBAAaA,KAAb;;IAGqBC,M;;;;;;;;;;;;;WAMnB,kBAAS;AAAA;;AAET,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,KAAtB,CAA4BC,MAA5B,CAAmCC,SAAlD;AAEE,aAEJ,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAE;AAAlB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACL,KAAL,CAAWC,UAAX,CAAsBK,MAAtB,EAAN;AAAA,SAA3B;AAAiE,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE,UAAX;AAAuBC,UAAAA,KAAK,EAAE,EAA9B;AAAkCC,UAAAA,GAAG,EAAE,EAAvC;AAA0CC,UAAAA,MAAM,EAAE;AAAlD,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACU,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACb,UAAAA,KAAK,EAAE,EAAR;AAAYD,UAAAA,MAAM,EAAE;AAApB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAE;AAACe,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,QAAQ,EAAE;AAA1B,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADV,CAFA,EAQA,oBAAC,OAAD;AACA,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE,mCAAiCd,QAAjC,GAA0C;AAAjD,SADR;AAEA,QAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAAEA,KAAT;AAAgBD,UAAAA,MAAM,EAAEA,MAAM,GAAG;AAAjC,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,CAFI;AAmBD;;;;EA7BiCd,S;;AAAfgB,M,CACdgB,iB,GAAoB;AACzBC,EAAAA,WAAW,EAAE;AADY,C;SADNjB,M","sourcesContent":["import React, {Component} from 'react';\nimport AppPreLoader from '../components/AppPreLoader';\nimport { NavigationActions, StackNavigator } from 'react-navigation';\nimport {Dimensions, StatusBar, Platform, View, TouchableOpacity} from 'react-native';\nimport ConfigApp from '../utils/ConfigApp';\nimport { WebView } from 'react-native-webview';\nimport { Container, Text, Button} from 'native-base';\nimport Icon from 'react-native-vector-icons/SimpleLineIcons';\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\n\nexport default class VideoP extends Component {\nstatic navigationOptions = {\n  headerShown: false\n};\n\n\n  render() {\n\n  var UrlVideo = this.props.navigation.state.params.VideoLINK;\n\n    return (\n\n<Container style={{backgroundColor: '#000000'}}>\n\n<TouchableOpacity onPress={() => this.props.navigation.goBack()} style={{position: 'absolute', right: 15, top: 40,zIndex: 9999}}>\n          <View style={{width: 30, height: 50}}>\n            <Icon name='close' style={{color: '#fff', fontSize: 24}} />\n          </View>\n</TouchableOpacity>\n\n<WebView\nsource={{ uri: 'https://www.youtube.com/embed/'+UrlVideo+'?rel=0&autoplay=0&showinfo=0&controls=0&playsinline=1&modestbranding=1'}}\nstyle={{ width: width, height: height * 0.30}}\n/>\n\n</Container>\n\n   );\n\n  }\n\n}"]},"metadata":{},"sourceType":"module"}