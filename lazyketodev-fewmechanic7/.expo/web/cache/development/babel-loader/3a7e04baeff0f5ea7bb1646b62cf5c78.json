{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rob\\\\keto-dev\\\\yonia\\\\node_modules\\\\react-native-super-grid\\\\SectionGrid.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport PropTypes from 'prop-types';\nimport { generateStyles, calculateDimensions, chunkArray } from \"./utils\";\n\nvar SectionGrid = function (_Component) {\n  _inherits(SectionGrid, _Component);\n\n  var _super = _createSuper(SectionGrid);\n\n  function SectionGrid(props) {\n    var _this;\n\n    _classCallCheck(this, SectionGrid);\n\n    _this = _super.call(this, props);\n    _this.onLayout = _this.onLayout.bind(_assertThisInitialized(_this));\n    _this.renderRow = _this.renderRow.bind(_assertThisInitialized(_this));\n    var staticDimension = props.staticDimension;\n    var totalDimension = staticDimension;\n\n    if (!staticDimension) {\n      totalDimension = Dimensions.get('window').width;\n    }\n\n    _this.state = {\n      totalDimension: totalDimension\n    };\n    return _this;\n  }\n\n  _createClass(SectionGrid, [{\n    key: \"onLayout\",\n    value: function onLayout(e) {\n      var _this$props = this.props,\n          staticDimension = _this$props.staticDimension,\n          onLayout = _this$props.onLayout;\n      var totalDimension = this.state.totalDimension;\n\n      if (!staticDimension) {\n        var _ref = e.nativeEvent.layout || {},\n            newTotalDimension = _ref.width;\n\n        if (totalDimension !== newTotalDimension) {\n          this.setState({\n            totalDimension: newTotalDimension\n          });\n        }\n      }\n\n      if (onLayout) {\n        onLayout(e);\n      }\n    }\n  }, {\n    key: \"renderRow\",\n    value: function renderRow(_ref2) {\n      var _this2 = this;\n\n      var renderItem = _ref2.renderItem,\n          rowItems = _ref2.rowItems,\n          rowIndex = _ref2.rowIndex,\n          section = _ref2.section,\n          itemsPerRow = _ref2.itemsPerRow,\n          rowStyle = _ref2.rowStyle,\n          separators = _ref2.separators,\n          isFirstRow = _ref2.isFirstRow,\n          containerStyle = _ref2.containerStyle;\n      var _this$props2 = this.props,\n          spacing = _this$props2.spacing,\n          itemContainerStyle = _this$props2.itemContainerStyle,\n          keyExtractor = _this$props2.keyExtractor;\n      var additionalRowStyle = {};\n\n      if (isFirstRow) {\n        additionalRowStyle = {\n          marginTop: spacing\n        };\n      }\n\n      return React.createElement(View, {\n        style: [rowStyle, additionalRowStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      }, rowItems.map(function (item, i) {\n        return React.createElement(View, {\n          key: keyExtractor ? keyExtractor(item, i) : \"item_\" + (rowIndex * itemsPerRow + i),\n          style: [containerStyle, itemContainerStyle],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }, renderItem({\n          item: item,\n          index: rowIndex * itemsPerRow + i,\n          section: section,\n          separators: separators,\n          rowIndex: rowIndex\n        }));\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props3 = this.props,\n          sections = _this$props3.sections,\n          style = _this$props3.style,\n          spacing = _this$props3.spacing,\n          fixed = _this$props3.fixed,\n          itemDimension = _this$props3.itemDimension,\n          staticDimension = _this$props3.staticDimension,\n          originalRenderItem = _this$props3.renderItem,\n          onLayout = _this$props3.onLayout,\n          _keyExtractor = _this$props3.keyExtractor,\n          restProps = _objectWithoutProperties(_this$props3, [\"sections\", \"style\", \"spacing\", \"fixed\", \"itemDimension\", \"staticDimension\", \"renderItem\", \"onLayout\", \"keyExtractor\"]);\n\n      var totalDimension = this.state.totalDimension;\n\n      var _calculateDimensions = calculateDimensions({\n        itemDimension: itemDimension,\n        staticDimension: staticDimension,\n        totalDimension: totalDimension,\n        spacing: spacing,\n        fixed: fixed\n      }),\n          containerDimension = _calculateDimensions.containerDimension,\n          itemsPerRow = _calculateDimensions.itemsPerRow,\n          fixedSpacing = _calculateDimensions.fixedSpacing;\n\n      var _generateStyles = generateStyles({\n        itemDimension: itemDimension,\n        containerDimension: containerDimension,\n        spacing: spacing,\n        fixedSpacing: fixedSpacing,\n        fixed: fixed\n      }),\n          containerStyle = _generateStyles.containerStyle,\n          rowStyle = _generateStyles.rowStyle;\n\n      var groupedSections = sections.map(function (section) {\n        var chunkedData = chunkArray(section.data, itemsPerRow);\n\n        var _renderItem = section.renderItem || originalRenderItem;\n\n        return _objectSpread(_objectSpread({}, section), {}, {\n          renderItem: function renderItem(_ref3) {\n            var item = _ref3.item,\n                index = _ref3.index,\n                section = _ref3.section;\n            return _this3.renderRow({\n              renderItem: _renderItem,\n              rowItems: item,\n              rowIndex: index,\n              section: section,\n              isFirstRow: index === 0,\n              itemsPerRow: itemsPerRow,\n              rowStyle: rowStyle,\n              containerStyle: containerStyle\n            });\n          },\n          data: chunkedData,\n          originalData: section.data\n        });\n      });\n      return React.createElement(SectionList, _extends({\n        sections: groupedSections,\n        keyExtractor: function keyExtractor(rowItems, index) {\n          if (_keyExtractor) {\n            return rowItems.map(function (rowItem, rowItemIndex) {\n              return _keyExtractor(rowItem, rowItemIndex);\n            }).join('_');\n          } else {\n            return \"row_\" + index;\n          }\n        },\n        style: style,\n        onLayout: this.onLayout,\n        ref: function ref(sectionList) {\n          _this3.sectionList = sectionList;\n        }\n      }, restProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return SectionGrid;\n}(Component);\n\nSectionGrid.propTypes = {\n  renderItem: PropTypes.func,\n  sections: PropTypes.arrayOf(PropTypes.any).isRequired,\n  itemDimension: PropTypes.number,\n  fixed: PropTypes.bool,\n  spacing: PropTypes.number,\n  style: ViewPropTypes.style,\n  itemContainerStyle: ViewPropTypes.style,\n  staticDimension: PropTypes.number,\n  onLayout: PropTypes.func,\n  listKey: PropTypes.string\n};\nSectionGrid.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  spacing: 10,\n  style: {},\n  itemContainerStyle: undefined,\n  staticDimension: undefined,\n  onLayout: null,\n  listKey: undefined\n};\nexport default SectionGrid;","map":{"version":3,"sources":["C:/Users/Rob/keto-dev/yonia/node_modules/react-native-super-grid/SectionGrid.js"],"names":["React","Component","ViewPropTypes","PropTypes","generateStyles","calculateDimensions","chunkArray","SectionGrid","props","onLayout","bind","renderRow","staticDimension","totalDimension","Dimensions","get","width","state","e","nativeEvent","layout","newTotalDimension","setState","renderItem","rowItems","rowIndex","section","itemsPerRow","rowStyle","separators","isFirstRow","containerStyle","spacing","itemContainerStyle","keyExtractor","additionalRowStyle","marginTop","map","item","i","index","sections","style","fixed","itemDimension","originalRenderItem","restProps","containerDimension","fixedSpacing","groupedSections","chunkedData","data","originalData","rowItem","rowItemIndex","join","sectionList","propTypes","func","arrayOf","any","isRequired","number","bool","listKey","string","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  View, Dimensions, ViewPropTypes, SectionList\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport { generateStyles, calculateDimensions, chunkArray } from './utils';\n\nclass SectionGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.onLayout = this.onLayout.bind(this);\n    this.renderRow = this.renderRow.bind(this);\n\n    const { staticDimension } = props;\n\n    // Calculate total dimensions and set to state\n    let totalDimension = staticDimension;\n    if (!staticDimension) {\n      totalDimension = Dimensions.get('window').width;\n    }\n\n    this.state = {\n      totalDimension,\n    };\n  }\n\n  onLayout(e) {\n    const { staticDimension, onLayout } = this.props;\n    const { totalDimension } = this.state;\n\n    if (!staticDimension) {\n      const { width: newTotalDimension } = e.nativeEvent.layout || {};\n\n      if (totalDimension !== newTotalDimension) {\n        this.setState({\n          totalDimension: newTotalDimension,\n        });\n      }\n    }\n\n    // call onLayout prop if passed\n    if (onLayout) {\n      onLayout(e);\n    }\n  }\n\n  renderRow({\n    renderItem,\n    rowItems,\n    rowIndex,\n    section,\n    itemsPerRow,\n    rowStyle,\n    separators,\n    isFirstRow,\n    containerStyle,\n  }) {\n    const { spacing, itemContainerStyle, keyExtractor } = this.props;\n\n    // Add spacing below section header\n    let additionalRowStyle = {};\n    if (isFirstRow) {\n      additionalRowStyle = {\n        marginTop: spacing,\n      };\n    }\n\n    return (\n      <View style={[rowStyle, additionalRowStyle]}>\n        {rowItems.map((item, i) => (\n          <View\n            key={keyExtractor ? keyExtractor(item, i) : `item_${(rowIndex * itemsPerRow) + i}`}\n            style={[containerStyle, itemContainerStyle]}\n          >\n            {renderItem({\n              item,\n              index: (rowIndex * itemsPerRow) + i,\n              section,\n              separators,\n              rowIndex,\n            })}\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      sections,\n      style,\n      spacing,\n      fixed,\n      itemDimension,\n      staticDimension,\n      renderItem: originalRenderItem,\n      onLayout,\n      keyExtractor,\n      ...restProps\n    } = this.props;\n\n    const { totalDimension } = this.state;\n\n    const { containerDimension, itemsPerRow, fixedSpacing } = calculateDimensions({\n      itemDimension,\n      staticDimension,\n      totalDimension,\n      spacing,\n      fixed,\n    });\n\n    const { containerStyle, rowStyle } = generateStyles({\n      itemDimension,\n      containerDimension,\n      spacing,\n      fixedSpacing,\n      fixed,\n    });\n\n    const groupedSections = sections.map((section) => {\n      const chunkedData = chunkArray(section.data, itemsPerRow);\n      const renderItem = section.renderItem || originalRenderItem;\n      return {\n        ...section,\n        renderItem: ({ item, index, section }) => this.renderRow({\n          renderItem,\n          rowItems: item,\n          rowIndex: index,\n          section,\n          isFirstRow: index === 0,\n          itemsPerRow,\n          rowStyle,\n          containerStyle,\n        }),\n        data: chunkedData,\n        originalData: section.data,\n      };\n    });\n\n    return (\n      <SectionList\n        sections={groupedSections}\n        keyExtractor={(rowItems, index) => {\n          if (keyExtractor) {\n            return rowItems.map((rowItem, rowItemIndex) => {\n              return keyExtractor(rowItem, rowItemIndex)\n            }).join('_')\n          } else {\n            return `row_${index}`\n          }\n        }}\n        style={style}\n        onLayout={this.onLayout}\n        ref={(sectionList) => { this.sectionList = sectionList; }}\n        {...restProps}\n      />\n    );\n  }\n}\n\nSectionGrid.propTypes = {\n  renderItem: PropTypes.func,\n  sections: PropTypes.arrayOf(PropTypes.any).isRequired,\n  itemDimension: PropTypes.number,\n  fixed: PropTypes.bool,\n  spacing: PropTypes.number,\n  style: ViewPropTypes.style,\n  itemContainerStyle: ViewPropTypes.style,\n  staticDimension: PropTypes.number,\n  onLayout: PropTypes.func,\n  listKey: PropTypes.string,\n};\n\nSectionGrid.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  spacing: 10,\n  style: {},\n  itemContainerStyle: undefined,\n  staticDimension: undefined,\n  onLayout: null,\n  listKey: undefined,\n};\n\nexport default SectionGrid;\n"]},"metadata":{},"sourceType":"module"}